@model SEBDOM_SAS.Models.RegistroPulpo
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery
@{
    ViewData["Title"] = "Detalles del Registro - " + Model.Fecha.ToString("dd/MM/yyyy");
    var token = antiforgery.GetAndStoreTokens(Context).RequestToken;
}

<input type="hidden" id="RequestVerificationToken" value="@token" />

<h1>@ViewData["Title"]</h1>

<div class="card mb-4">
    <div class="card-header bg-primary text-white">
        <h4>Resumen por Código</h4>
    </div>
    <div class="card-body">
        <table class="table">
            <thead>
                <tr>
                    <th>Código</th>
                    <th>Proveedor</th>
                    <th>Precio Normal</th>
                    <th>Precio Especial</th>
                    <th>Peso Total (lbs)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var grupo in Model.ProveedoresPrecios.GroupBy(p => p.Codigo))
                {
                    var proveedor = grupo.First();
                    <tr data-proveedor-id="@proveedor.Id">
                        <td>@proveedor.Codigo</td>
                        <td class="editable" data-field="nombre">@proveedor.NombreProveedor</td>
                        <td class="editable" data-field="precioNormal">@(proveedor.PrecioNormal?.ToString("C") ?? "-")</td>
                        <td class="editable" data-field="precioEspecial">@(proveedor.PrecioEspecial?.ToString("C") ?? "-")</td>
                        <td class="peso-total" data-codigo="@proveedor.Codigo">
                            @Model.PesoTotalPorCodigo.GetValueOrDefault(proveedor.Codigo, 0).ToString("N2")
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="card mb-4">
    <div class="card-header bg-success text-white">
        <h4>Añadir Nueva Gaveta</h4>
    </div>
    <div class="card-body">
        <form asp-action="AddGaveta" method="post">
            <input type="hidden" name="registroId" value="@Model.Id" />

            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Código</label>
                        <select name="codigo" class="form-select" required>
                            @foreach (var codigo in Model.CodigosLista)
                            {
                                <option value="@codigo">@codigo</option>
                            }
                        </select>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        <label>Número de Gaveta</label>
                        <input type="number" name="numeroGaveta" class="form-control" required>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        <label>Cantidad de Pulpos</label>
                        <input type="number" name="cantidad" class="form-control" required>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        <label>Peso (lbs)</label>
                        <input type="number" step="0.01" name="pesoLbs" class="form-control" required>
                    </div>
                </div>
            </div>

            <button type="submit" class="btn btn-primary mt-3">Añadir Gaveta</button>
        </form>
    </div>
</div>

<div class="card">
    <div class="card-header bg-info text-white">
        <h4>Gavetas Registradas</h4>
    </div>
    <div class="card-body">
        <table class="table">
            <thead>
                <tr>
                    <th>Código</th>
                    <th>Gaveta #</th>
                    <th>Cantidad</th>
                    <th>Peso (lbs)</th>
                    <th>Estado</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var gaveta in Model.Gavetas.OrderBy(g => g.Codigo).ThenBy(g => g.NumeroGaveta))
                {
                    <tr data-gaveta-id="@gaveta.Id">
                        <td>@gaveta.Codigo</td>
                        <td class="editable" data-field="numeroGaveta">@gaveta.NumeroGaveta</td>
                        <td class="editable" data-field="cantidad">@gaveta.CantidadPulpos</td>
                        <td class="editable" data-field="pesoLbs">@gaveta.PesoLbs.ToString("N2")</td>
                        <td>
                            <span class="badge @(gaveta.Disponible ? "bg-success" : "bg-secondary")">
                                @(gaveta.Disponible ? "Disponible" : "No disponible")
                            </span>
                        </td>
                        <td>
                            <form asp-action="ToggleDisponibilidad" method="post">
                                <input type="hidden" name="gavetaId" value="@gaveta.Id" />
                                <button type="submit" class="btn btn-sm @(gaveta.Disponible ? "btn-warning" : "btn-success")">
                                    @(gaveta.Disponible ? "Marcar No Disponible" : "Marcar Disponible")
                                </button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="mt-4">
    <a asp-action="DetailsByDate" asp-route-fecha="@Model.Fecha.ToString("yyyy-MM-dd")"
       class="btn btn-secondary">Volver a la fecha</a>

    <form asp-action="Delete" method="post" class="d-inline">
        <input type="hidden" name="id" value="@Model.Id" />
        <button type="submit" class="btn btn-danger"
                onclick="return confirm('¿Estás seguro de eliminar este registro COMPLETO? Se eliminarán todos los datos asociados.')">
            Eliminar Registro Completo
        </button>
    </form>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function() {
            // Función para hacer campos editables
            function setupEditableFields() {
                $('.editable').off('click').on('click', function() {
                    var $cell = $(this);
                    var originalValue = $cell.text().replace('$', '').replace('-', '').trim();
                    var field = $cell.data('field');
                    var isCurrency = field.includes('precio');
                    var isNumber = isCurrency || field === 'pesoLbs' || field === 'cantidad' || field === 'numeroGaveta';

                    var $input = $('<input>', {
                        type: isNumber ? 'number' : 'text',
                        value: originalValue,
                        class: 'form-control form-control-sm'
                    });

                    if (isNumber) {
                        $input.attr('step', isCurrency || field === 'pesoLbs' ? '0.01' : '1');
                    }

                    $cell.html($input);
                    $input.focus();

                    function saveChanges() {
                        var newValue = $input.val().trim();
                        if (newValue !== originalValue) {
                            var $row = $cell.closest('tr');
                            var isProveedor = $row.data('proveedor-id') !== undefined;
                            var id = isProveedor ? $row.data('proveedor-id') : $row.data('gaveta-id');

                            var data = {
                                id: id,
                                field: field,
                                value: newValue
                            };

                            $.ajax({
                                url: '/Pulpos/UpdateField',
                                type: 'POST',
                                headers: {
                                    'RequestVerificationToken': $('#RequestVerificationToken').val()
                                },
                                data: data,
                                success: function(response) {
                                    if (response.success) {
                                        // Formatear el nuevo valor
                                        if (isCurrency) {
                                            $cell.html('$' + parseFloat(newValue).toFixed(2));
                                        } else if (field === 'pesoLbs') {
                                            $cell.html(parseFloat(newValue).toFixed(2));
                                        } else {
                                            $cell.html(newValue);
                                        }

                                        // Si se editó el peso, recargar para actualizar totales
                                        if (field === 'pesoLbs') {
                                            location.reload();
                                        }
                                    } else {
                                        alert('Error: ' + response.message);
                                        $cell.html(originalValue);
                                    }
                                    setupEditableFields(); // Reconfigurar los eventos
                                },
                                error: function() {
                                    alert('Error al guardar los cambios');
                                    $cell.html(originalValue);
                                    setupEditableFields(); // Reconfigurar los eventos
                                }
                            });
                        } else {
                            $cell.html(originalValue);
                            setupEditableFields(); // Reconfigurar los eventos
                        }
                    }

                    $input.on('blur', saveChanges);
                    $input.on('keypress', function(e) {
                        if (e.which === 13) { // Enter key
                            saveChanges();
                        }
                    });
                });
            }

            // Inicializar los campos editables
            setupEditableFields();
        });
    </script>

    <style>
        .editable {
            cursor: pointer;
            padding: 0.25rem;
            border-radius: 0.25rem;
            transition: background-color 0.2s;
        }

            .editable:hover {
                background-color: #f8f9fa;
            }

            .editable input {
                display: inline-block;
                width: auto;
                min-width: 80px;
            }
    </style>
}